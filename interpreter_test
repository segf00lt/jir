val %1 24
val %2 2
add %3 %1 %2
dumpreg %3

sub %4 %3 %1
eq %5 %4 %2
branch imm %5 2

// we should jump over this
dumpreg %4

dumpreg %5

val %1 12

dumpreg %1
sub imm %1 %1 1
gt imm %2 %1 0
branch imm %2 -3

move %6 %1
add imm %7 %6 197
mod imm %8 %7 3
dumpreg %7
dumpreg %8

val %1 13
val %2 0x4
stor global s32 %2 %1
load global s32 %3 %2
ne %4 %3 %1
branch imm %4 0 // if something is wrong the program wont end
dumpreg %4

alloc u64 %3
alloc u8 %4
dumpreg %4
val %1 1234567
stor local u64 %3 %1
val u8 %1 0xff
stor local u8 %4 %1
load local u64 %2 %3
load local u8 %6 %4
dumpreg %1
dumpreg %2
dumpreg %6
bframe
alloc u32 %3
val %1 7654321
stor local u32 %3 %1
val %1 0
load local u32 %1 %3
dumpreg %1
dumpreg %3
alloc u8 %3
dumpreg %3
eframe
alloc u8 %3
dumpreg %3

val f32 %0 1.234
setprocreg f32 %0 %0
getprocreg f32 %1 %0
dumpreg f32 %1


halt
